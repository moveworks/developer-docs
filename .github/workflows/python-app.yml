name: Developer Docs Validation
'on':
  pull_request_target:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      message: '${{ steps.check_changes.outputs.comment_message }}'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.sha }}'
          fetch-depth: 0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ci/requirements.txt
      - name: Check Readme Changes
        id: check_changes
        run: python ci/check_readme_changes.py
        env:
          GH_SHA_MAIN_HEAD: '${{ github.sha }}'
          GH_SHA_PR_HEAD: '${{ github.event.pull_request.head.sha }}'
      - name: Validate Files
        run: python ci/validate.py
      - name: Validate Files V2
        run: python ci/validate_v2.py
      - name: Generate Code Blocks
        run: python ci/copy_code_blocks.py
  comment:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pull-requests: write
    steps:
      - name: Add Comment
        if: needs.build.outputs.message != ''
        uses: actions/github-script@v7
        env:
          message: '${{needs.build.outputs.message}}'
        with:
          github-token: '${{secrets.GITHUB_TOKEN}}'
          script: |
            const issue_number = context.issue.number;
            const comment_message = process.env.message;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment_message
            });
