steps:
  - action:
      action_name: GET_INTERVIEWS
      output_key: GET_INTERVIEWS_result
  - script:
      output_key: rating_info
      input_args:
        rating: data.rating
      code: |
        # Define the rating ID mapping based on the rating
        rating_map = {
            1: 'af9e3155ecc010650d2e7a94fc950cf3',  
            2: 'af9e3155ecc010650d2e7a8eb3710cf2',  
            3: 'af9e3155ecc010650d2e7a781c250cf1'   
        }

        normalized_rating = int(rating)  

        if normalized_rating in rating_map:
            rating_info = {'rating_id': rating_map[normalized_rating]}  
            return rating_info
        else:
            return {'rating_id': 'Invalid'}  
  - switch:
      cases:
        - steps:
            - action:
                action_name: Submit_Interview_Feedback
                input_args:
                  comment: data.comment
                  rating_id: data.rating_info.rating_id
                  Interview_id: data.GET_INTERVIEWS_result.data.$FILTER(interview =>
                    data.candidate_name IN interview.descriptor)[0].id
                output_key: Submit_Interview_Feedback_result
            - return:
                output_mapper:
                  Success_Message:
                    expression: "'Feedback submitted successfully.'"
          condition: data.GET_INTERVIEWS_result.data.$FILTER(interview =>
            data.candidate_name IN interview.descriptor) != null
        - steps:
            - return:
                output_mapper:
                  No_Interview_Found_Message:
                    expression: "'No interview found for the given candidate.'"
          condition: "true"
      default:
        steps: []

